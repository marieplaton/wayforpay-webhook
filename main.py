from fastapi import FastAPI, Request
import logging
import httpx  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤

app = FastAPI()
logging.basicConfig(level=logging.INFO)

# –•—Ä–∞–Ω–∏–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã –≤ –ø–∞–º—è—Ç–∏ (–¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤)
processed_orders = set()

# üîπ –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π Webhook Make
MAKE_WEBHOOK_URL = "https://hook.eu2.make.com/p9ugnp2wopa4yd2g3mbskexbgkgs6770"

@app.post("/")
async def wayforpay_webhook(request: Request):
    try:
        data = await request.json()
        order_ref = data.get("orderReference")  # ID –∑–∞–∫–∞–∑–∞

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ –ª–∏ –º—ã —ç—Ç–æ—Ç –∑–∞–∫–∞–∑ —Ä–∞–Ω–µ–µ
        if order_ref in processed_orders:
            logging.warning(f"Duplicate request detected: {order_ref}")
            return {"status": "OK"}  # –û—Ç–≤–µ—á–∞–µ–º OK, —á—Ç–æ–±—ã WayForPay –Ω–µ —Ä–µ—Ç—Ä–∞–∏–ª

        logging.info(f"Processing new transaction: {order_ref}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Make
        async with httpx.AsyncClient() as client:
            response = await client.post(MAKE_WEBHOOK_URL, json=data)
            logging.info(f"Response from Make: {response.status_code} {response.text}")

        processed_orders.add(order_ref)  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –∑–∞–∫–∞–∑ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π

        logging.info("Sending response: 200 OK")
        return {"status": "OK"}  # WayForPay –ø–æ–ª—É—á–∏—Ç 200 –∏ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç —Ä–µ—Ç—Ä–∞–∏
    except Exception as e:
        logging.error(f"Error processing request: {e}")
        return {"status": "error"}, 500  # –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞